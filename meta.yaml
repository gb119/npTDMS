{% set name = "nptdms" %}
{% set version = "0.11.4" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "ae45e957ad3859da3927cfeb730af005d654f43f878c9f94a05dd9fb47fbaa69" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  git_tag: {{ version }}
  git_url: https://github.com/gb119/npTDMS.git

build:
  number: 0
  entry_points:
    - tdmsinfo=nptdms.tdmsinfo:main
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  host:
    - python
    - setuptools
    - numpy
  run:
    - python
    - setuptools
    - numpy

test:
  imports:
    - nptdms
    - nptdms.test
  commands:
    - tdmsinfo --help

about:
  home: https://github.com/adamreeve/npTDMS
  license: GNU Library or Lesser General Public License (LGPL)
  license_family: LGPL
  license_file: ''
  summary: Cross-platform, NumPy based module for reading TDMS files produced by LabView.
  description: "npTDMS\n======\n\n.. image:: https://app.wercker.com/status/446c67339f7d484188a35abc64dd3f51/s/master\n    :alt: wercker status\n    :target: https://app.wercker.com/project/bykey/446c67339f7d484188a35abc64dd3f51\n\
    \nnpTDMS is a cross-platform Python package for reading and writing TDMS files as produced by LabVIEW,\nand is built on top of the `numpy <http://www.numpy.org/>`__ package.\nData read from a TDMS file\
    \ is stored in numpy arrays,\nand numpy arrays are also used when writing TDMS file.\n\nTypical usage when reading a TDMS file might look like::\n\n    from nptdms import TdmsFile\n\n    tdms_file =\
    \ TdmsFile(\"path_to_file.tdms\")\n    channel = tdms_file.object('Group', 'Channel1')\n    data = channel.data\n    time = channel.time_track()\n    # do stuff with data\n\nAnd to write a file::\n\n\
    \    from nptdms import TdmsWriter, ChannelObject\n    import numpy\n\n    with TdmsWriter(\"path_to_file.tdms\") as tdms_writer:\n        data_array = numpy.linspace(0, 1, 10)\n        channel = ChannelObject('Group',\
    \ 'Channel1', data_array)\n        tdms_writer.write_segment([channel])\n\nFor more information, see the `npTDMS documentation <http://nptdms.readthedocs.io>`__.\n\nInstallation\n------------\n\nnpTDMS\
    \ is available from the Python Package Index, so the easiest way to\ninstall it is by running (as root)::\n\n    pip install npTDMS\n\nAlternatively, after downloading the source code you can extract\
    \ it and\nchange into the new directory, then run::\n\n    python setup.py install\n\nLinks\n-----\n\nSource code lives at https://github.com/adamreeve/npTDMS and any issues can be\nreported at https://github.com/adamreeve/npTDMS/issues.\n\
    Documentation is available at http://nptdms.readthedocs.io.\n\nWhat Currently Doesn't Work\n---------------------------\n\nThis module doesn't support TDMS files with XML headers or with\nextended floating\
    \ point data.\n\nContributors/Thanks\n-------------------\n\nThanks to Floris van Vugt who wrote the pyTDMS module,\nwhich helped when writing this module.\n\nThanks to Tony Perkins, Ruben De Smet,\
    \ Martin Hochwallner and Peter Duncan\nfor contributing support for converting to Pandas DataFrames.\n\nThanks to nmgeek and jshridha for implementing support for DAQmx raw data\nfiles.\n"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
